# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Won't build if it already has once
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: "never"
          skip_after_successful_duplicate: "true"
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  # This workflow contains a job to make sure the app builds
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "Ok so it seems like this is running."

      # Creates .env file
      - name: Create env file
        run: |
          pwd
          touch .env.local
          touch .test.test
          echo "${{secrets.ENV}}" >> .env.local
          echo "${{vars.TEST}}" >> .test.test
          echo "${{env.TEST}}" >> .test.tester
          cat .test.test
          cat .test.tester

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
          yarn lint
          yarn prettier
          yarn build
